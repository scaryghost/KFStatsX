+Author
Scary Ghost

+Version
1.0.0

+MD5 Hash
These are the MD5 hashes for version 1.0.0.  If the .u and .ucl files do 
not match these signatures, you do not have an official released version 
from me.

KFStatsX.u        096802b53fd3fa40c20ceadd40655573
KFSTatsX.ucl      13bc023a414bf6e5e2f3a1c557b7eb85

A record of all md5 hashes may be viewed here:
https://github.com/scaryghost/KFStatsX/wiki/MD5-Hashes

+Install
Copy the contents of the system folder to your Killing Floor system folder.

+Configuration
These are the configurable variables for the mutator.  They will need to 
be configured to save the player and match stats.  See "About" for more 
details.

broadcastStats      Enable if the player and match stats should be
                    broadcast to a remote server

localHostSteamId    SteamID of the local host.  Only used for solo mode or 
                    listen servers

serverAddress       IP or hostname of the remote server

serverPort          Port the remote server is listening on

serverPwd           Remote server password


+About
This mutator is a complete overhaul of the Game Stats Tab mutator along 
with additional features.  Like Game Stats Tab, detail statistics for each 
player are tracked throughout the course of the game.  However, instead of 
displaying the statistics on the ESC menu, a new console command was added 
to display the information separate from the ESC menu.  The statistics are 
broken into 3 groups, each with their own tab, and the settings sliders 
have been moved to the 4th tab.

In addition to the ui changes, the underlying code storing the statistics 
have changed, utilizing a sorted map to manage the values and relying more 
on the KFSXHumanPawn class.  This allows the stats to be more dynamic, 
able to track new stats on the fly, instead of needing to add to a master 
list of stats to track.

Finally, the mutator can broadcast the player's stats to a remote server to 
keep their progress permanent.  A history of each match can be retrieved 
along side stat totals providing an insightful view to a player's 
performance.  The README for the KFSXTrackingServer can provide more 
information.

https://github.com/scaryghost/KFSXTrackingServer

As an added bonus, the results of each match are also logged.  The remote 
server keeps an aggregate of all match results.

+Special Thanks
Marco - ServerPerks was instrumental in helping me understand how to setup 
        a vertical list and utilize the UDPLink class to broadcast to a 
        remote server.
